
/*!
 * Inspect
 * Copyright (c) 2010 TJ Holowaychuk <tj@vision-media.ca>
 * MIT Licensed
 */

/**
 * Module dependencies.
 */

var inspect = require('sys').inspect;

/**
 * Inspect `obj`.
 *
 * @param {Object} obj
 * @api public
 */

module.exports = function(obj, depth){
  if (!obj) return;

  var cons = obj.constructor
    , name = cons.name
    , proto = obj.__proto__
    , depth = depth || 0
    , indent = Array(depth + 1).join('  ');

  if (0 == depth) {
    if ('function' == typeof obj) {
      name = '[' + name + ': ' + obj.name + ']';
    } else {
      name = '[' + name + ']';
    }
  }

  console.log(indent + '\033[33m%s\033[0m', name);
  Object.keys(obj).sort().forEach(function(key){
    var desc = Object.getOwnPropertyDescriptor(obj, key);
    if (desc.get) console.log(indent + '  \033[90m.%s\033[0m', key);
    if (desc.set) console.log(indent + '  \033[90m.%s=\033[0m', key);
    if ('function' == typeof desc.value) {
      var str = desc.value.toString();
      var params = str.match(/^function *\((.*?)\)/)
        , val = params
          ? params[1].split(/ *, */).map(function(param){
            return '\033[0m' + param + '\033[90m';
          }).join(', ')
          : '';
      console.log(indent + '  \033[90m.%s(%s)\033[0m', key, val);
    } else if (undefined !== desc.value) {
      console.log(indent + '  \033[90m.%s %s\033[0m', key, inspect(desc.value));
    }
  });

  module.exports(proto, ++depth);
};
